{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/loading-indicator.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/renderer/virtual-tree-freeze-render.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, Property } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n/**\n * Defines TreeGrid column\n */\nvar TreeGridColumn = /** @class */ (function (_super) {\n    __extends(TreeGridColumn, _super);\n    function TreeGridColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], TreeGridColumn.prototype, \"columns\", void 0);\n    return TreeGridColumn;\n}(Column));\nexport { TreeGridColumn };\n/**\n * Defines stacked tree grid column\n */\nvar StackedColumn = /** @class */ (function (_super) {\n    __extends(StackedColumn, _super);\n    function StackedColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StackedColumn;\n}(TreeGridColumn));\nexport { StackedColumn };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.grid.currentViewData.filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.grid.currentViewData.indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n                tr.querySelector('.e-frame').setAttribute('title', 'checkbox' + chkstate);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed && !isNullOrUndefined(args.row)) {\n                args.row.style.display = 'none';\n                var rowsObj = this.parent.grid.getRowsObject();\n                if (!this.parent.grid.isFrozenGrid() && !isNullOrUndefined(args.row.getAttribute('data-uid'))) {\n                    rowsObj.filter(function (e) { return e.uid === args.row.getAttribute('data-uid'); })[0].visible = false;\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow && !isNullOrUndefined(args.row)) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (!isNullOrUndefined(args.row)) {\n            if (args.row.querySelector('.e-treegridexpand')) {\n                args.row.setAttribute('aria-expanded', 'true');\n            }\n            else if (args.row.querySelector('.e-treegridcollapse')) {\n                args.row.setAttribute('aria-expanded', 'false');\n            }\n            if (this.parent.enableCollapseAll && this.parent.initialRender) {\n                if (!isNullOrUndefined(data.parentItem)) {\n                    args.row.style.display = 'none';\n                }\n            }\n        }\n        var dragStartData = 'dragStartData';\n        var draggedRecord = 'draggedRecord';\n        if (this.parent.rowDragAndDropModule && this.parent.grid.rowDragAndDropModule && (this.parent.grid.rowDragAndDropModule[\"\" + dragStartData] ||\n            this.parent.rowDragAndDropModule[\"\" + draggedRecord]) && this.parent.getContentTable().scrollHeight <= this.parent.getContent().clientHeight) {\n            var lastRowBorder = 'lastRowBorder';\n            var lastVisualData = this.parent.getVisibleRecords()[this.parent.getVisibleRecords().length - 1];\n            if (lastVisualData.uniqueID === args.data.uniqueID && !isNullOrUndefined(args.row) && !args.row.cells[0].classList.contains('e-lastrowcell')) {\n                this.parent[\"\" + lastRowBorder](args.row, true);\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                if (this.parent['isFromGantt'] && !this.parent.loadChildOnDemand) {\n                    iconRequired = data.hasChildRecords;\n                }\n                else {\n                    iconRequired = !(data.childRecords.length === 0);\n                }\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '4px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            summaryData = isNullOrUndefined(summaryData) ? null : summaryData;\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    this.parent[\"\" + renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        if (rowDetails.action === 'remoteExpand' && this.parent.grid.filterModule && this.parent.grid.filterModule['value']) {\n            var filterqry = this.parent.grid.getDataModule().generateQuery().queries.filter(function (e) { return e.fn !== 'onPage' && typeof e.e.predicates !== 'undefined'; });\n            qry.queries.push(filterqry[0]);\n        }\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            var resultChildData = [];\n            if (rowDetails.action === 'remoteExpand' && _this.parent.grid.filterModule && _this.parent.grid.filterModule['value']) {\n                for (var i = 0; i < datas.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(datas[parseInt(i.toString(), 10)], _this.parent.parentIdMapping) && datas[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] !== null && datas[parseInt(i.toString(), 10)].level === 0) {\n                        datas.splice(i, 1);\n                        i--;\n                    }\n                }\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping]) {\n                        if (Object.prototype.hasOwnProperty.call(result, i)) {\n                            resultChildData.push(result[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                result = resultChildData;\n            }\n            if (_this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n                rowDetails.record.childRecords = [];\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] && Object.prototype.hasOwnProperty.call(result, i)) {\n                        rowDetails.record.childRecords.push(result[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else {\n                rowDetails.record.childRecords = result;\n            }\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            delete parentData.childRecords;\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                            if (rowDetails.action === 'remoteExpand') {\n                                result[parseInt(r.toString(), 10)].childRecords = [];\n                                result[parseInt(r.toString(), 10)].childRecords = rowDetails.record.childRecords;\n                            }\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex_1 = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex_1.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.grid.vueInstance = this.vueInstance;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n        var enableHtmlSanitizer = 'enableHtmlSanitizer';\n        this.grid[\"\" + enableHtmlSanitizer] = this.enableHtmlSanitizer;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && (!isNullOrUndefined(args.data) && args.data['hasChildRecords']) && !this.selectionSettings.checkboxOnly) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var actualTarget = 'actualTarget';\n            var target = _this.grid.selectionModule[\"\" + actualTarget];\n            if (!isNullOrUndefined(target) && (target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (this.rowTemplate) {\n            if (this.isReact && this.getContentTable().rows.length === 0) {\n                setTimeout(function () {\n                    _this.treeColumnRowTemplate();\n                    if (_this.enableCollapseAll) {\n                        var currentData = _this.getCurrentViewRecords();\n                        var rows = _this.getContentTable().rows;\n                        for (var i = 0; i < rows.length; i++) {\n                            var args = { data: currentData[parseInt(i.toString(), 10)],\n                                row: rows[parseInt(i.toString(), 10)] };\n                            _this.renderModule.RowModifier(args);\n                        }\n                    }\n                }, 0);\n            }\n            else {\n                this.treeColumnRowTemplate();\n            }\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.allowResizing) {\n            this.updateColumnsWidth(this.columns);\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnsWidth = function (columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.updateColumnsWidth(column.columns);\n            }\n            else if (column.field) {\n                var currentColumn = _this.grid.getColumnByField(column.field);\n                column.width = currentColumn.width;\n            }\n        });\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        var isSummaryRow = 'isSummaryRow';\n        return this.grid.currentViewData.filter(function (e) { return isNullOrUndefined(e[\"\" + isSummaryRow]); });\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[\"\" + children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                if (this.enableVirtualization && this.isCollapseAll) {\n                    if (this.isExpandAll && row.rowIndex === -1) {\n                        record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                    }\n                    else {\n                        record = this.grid.getCurrentViewRecords()[row.rowIndex];\n                    }\n                }\n                else {\n                    record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                }\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        if (!isNullOrUndefined(this.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex])) {\n                            this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        if (!this.enableVirtualization) {\n                            this.expandRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                        else if (rows[0].getAttribute('aria-expanded') !== 'true') {\n                            this.expandRow(rows[0]);\n                        }\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.grid.currentViewData.indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.grid.currentViewData;\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization ||\n                this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        var rows = this.getContentTable().rows;\n        rows = [].slice.call(rows);\n        for (var i = 0; i < rows.length; i++) {\n            var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                .cells[this.treeColumnIndex];\n            var row = rows[parseInt(i.toString(), 10)];\n            var rowData = this.grid.getRowsObject()[parseInt(i.toString(), 10)].data;\n            var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n            this.renderModule.cellRender(arg);\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, false);\n                }\n            }\n        }\n    };\n    /**\n     * Method to sanitize html element\n     *\n     * @param {any} value - Specifies the html value to sanitize\n     * @returns {any} Returns the sanitized html value\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeGrid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer && typeof (value) === 'string') {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.column.index)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].edit === 'add') {\n                merge(this.currentViewRecords[parseInt(rowObjectIndex.toString(), 10)], this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n        if (e.target.classList.contains('e-frame') && this.parent.getCurrentViewRecords().length === 0) {\n            this.doubleClickTarget = null;\n        }\n        if (e.target.classList.contains('e-treegridcollapse') || e.target.classList.contains('e-treegridexpand')) {\n            var tr = parentsUntil(e.target, 'e-row');\n            var rowIndex = tr && parseInt(tr.getAttribute('data-rowindex'), 10);\n            if (!isNullOrUndefined(rowIndex) && rowIndex >= 0 && this.parent.allowPaging) {\n                /* eslint-disable-next-line */\n                this.parent.grid.getDataRows()[rowIndex].dataset.uid = this.parent.grid.contentModule.getRows()[rowIndex].uid;\n            }\n        }\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionBegin, args);\n        }\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    if (this.parent['isGantt'] && !this.parent.loadChildOnDemand) {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                    else {\n                        var crud = null;\n                        crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                        crud.then(function (e) {\n                            if (!isNullOrUndefined(e)) {\n                                args.rowData[args.columnName] = e[args.columnName];\n                            }\n                            _this.updateCell(args, rowIndex_1);\n                            _this.afterCellSave(args, row_1, rowIndex_1);\n                        });\n                    }\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else if (!this.parent.enableVirtualization) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][\"\" + position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][\"\" + position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[\"\" + frows].splice(0, 1);\n                        this.parent.grid.contentModule[\"\" + frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        if ((this.endIndex - this.startIndex !== this.parent.pageSettings.pageSize) && (this.totalRecords > this.parent.pageSettings.pageSize) &&\n            (this.endIndex === this.totalRecords)) {\n            args.startIndex = this.endIndex - this.parent.pageSettings.pageSize;\n            args.endIndex = this.endIndex;\n        }\n        else {\n            args.startIndex = this.startIndex;\n            args.endIndex = this.endIndex;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? parseInt(this.parent.height.toString(), 10) :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock || isNullOrUndefined(this[\"\" + selectedRowIndex]) ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if ((nextSetResIndex + this.parent.pageSettings.pageSize) > this.totalRecords && (this.endIndex - this.startIndex) <\n                (this.parent.pageSettings.pageSize / 2) && (this.endIndex - nextSetResIndex) < (this.parent.pageSettings.pageSize / 2)) {\n                this.startIndex = lastIndex - (this.parent.pageSettings.pageSize / 2);\n            }\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    if (this.totalRecords === this.endIndex) {\n                        this.translateY = (this.totalRecords * rowHeight) - ((this.endIndex - this.startIndex) * rowHeight);\n                    }\n                    else {\n                        this.translateY = scrollArgs.offset.top;\n                    }\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && ((isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) ||\n                (this.parent.enableVirtualMaskRow && this.requestType === 'virtualscroll'))) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var containerRect = 'containerRect';\n            _this[\"\" + containerRect] = _this[\"\" + options].container.getBoundingClientRect();\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer, getTransformValues } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            if (requestType === 'save' || (requestType === 'refresh' && this.parent['isGantt'] && this.parent['isAddedFromGantt'])) {\n                startIndex = counts.startIndex + (counts.count - counts.endIndex);\n                endIndex = counts.count;\n                this.parent['isAddedFromGantt'] = false;\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            var virtualWrapperElement = this.parent.grid.contentModule.virtualEle.wrapper;\n            var translateY = getTransformValues(virtualWrapperElement).height;\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length) && translateY === 0) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parseInt(parentGrid.height.toString(), 10) :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            if (freeze && frozenRightRows.length) {\n                frozenRightRows[parseInt(i.toString(), 10)].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Column","options","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","TreeGridColumn","_super","apply","Property","StackedColumn","LoadingIndicator","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","currentViewData","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","chkstate","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","rowsObj","getRowsObject","isFrozenGrid","visible","proxy_1","parentrec","rowDragAndDropModule","getContentTable","scrollHeight","getContent","clientHeight","getVisibleRecords","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","loadChildOnDemand","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","searchString","expands","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","filterqry","predicates","showSpinner","inx","haveChild","resultChildData","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","getColumnByIndex","editType","findnextRowElement","selectRow","cellIndex_1","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","remoteCollapsedData","remoteExpandedData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","isVue","vueInstance","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","enableHtmlSanitizer","triggerEvents","IsExpandCollapseClicked","checkboxOnly","bindGridEvents","rowSelecting","rowDeselecting","rowSelected","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","dataManager","isQueryInvokedFromData","callBackPromise_2","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","movableContent","frozenContent","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","val","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","sHeight","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","updateColumnsWidth","currentColumn","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","lastrowIdx","lastRow","removeAttribute","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","gridRowsObject","currentIndex","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","sanitize","SanitizeHtmlHelper","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","url","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","dataset","addArgs","dataRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","rowCollection","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","gridTop","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","isRowSelected","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","virtualWrapperElement","wrapper","getTransformValues","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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AAW,YAAS,IAChCiE,IACI2B,cACDwb,EAASphB,UAAW,iBAAc,IACrCiE,IACI2B,WAAS,aACVwb,EAASphB,UAAW,gBAAa,IACpCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,kBAAe,IACtCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,wBAAqB,IAC5CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,oBAAiB,IACxCiE,IACIo9B,aAAYl7B,IACbib,EAASphB,UAAW,uBAAoB,IAC3CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,sBAAmB,IAC1CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,oBAAiB,IACxCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,yBAAsB,IAC7CiE,IACIo9B,aAAY/hB,KACb8B,EAASphB,UAAW,mBAAgB,IACvCiE,IACIo9B,aAAYC,oBACblgB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACI2B,cACDwb,EAASphB,UAAW,oBAAiB,IACxCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,qBAAkB,IACzCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,wBAAqB,IAC5CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,mBAAgB,IACvCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,wBAAqB,IAC5CiE,IACIo9B,aAAYngB,KACbE,EAASphB,UAAW,mBAAgB,IACvCiE,IACIiC,gBAAe6a,KAChBK,EAASphB,UAAW,iBAAc,IACrCiE,IACIo9B,aAAYrgB,KACbI,EAASphB,UAAW,mBAAgB,IACvCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,qBAAkB,IACzCiE,IACI2B,cACDwb,EAASphB,UAAW,qBAAkB,IACzCiE,IACIo9B,aAAYp7B,IACbmb,EAASphB,UAAW,qBAAkB,IACzCiE,IACIo9B,aAAY7vB,IACb4P,EAASphB,UAAW,qBAAkB,IACzCiE,IACI2B,cACDwb,EAASphB,UAAW,cAAW,IAClCiE,IACI2B,cACDwb,EAASphB,UAAW,sBAAmB,IAC1CiE,IACI2B,WAAS,YACVwb,EAASphB,UAAW,gBAAa,IACpCiE,IACI2B,cACDwb,EAASphB,UAAW,uBAAoB,IAC3CiE,IACI2B,cACDwb,EAASphB,UAAW,sBAAmB,IAC1CiE,IACI2B,cACDwb,EAASphB,UAAW,kBAAe,IACtCiE,IACI2B,WAAS,WACVwb,EAASphB,UAAW,wBAAqB,IAC5CiE,IACI2B,WAAS,OACVwb,EAASphB,UAAW,gBAAa,IACpCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,mBAAgB,IACvCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,oBAAiB,IACxCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,kBAAe,IACtCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,qBAAkB,IACzCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,uBAAoB,IAC3CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,0BAAuB,IAC9CiE,IACI2B,WAAS,SACVwb,EAASphB,UAAW,aAAU,IACjCiE,IACI2B,WAAS,SACVwb,EAASphB,UAAW,YAAS,IAChCiE,IACIo9B,aAAYv7B,IACbsb,EAASphB,UAAW,uBAAoB,IAC3CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,2BAAwB,IAC/CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,2BAAwB,IAC/CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,iCAA8B,IACrDiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,0BAAuB,IAC9CiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,8BAA2B,IAClDiE,IACIo9B,aAAYlgB,KACbC,EAASphB,UAAW,6BAA0B,IACjDiE,IACI2B,WAAS,QACVwb,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,cAAW,IAClCiE,IACIs9B,WACDngB,EAASphB,UAAW,WAAQ,IAC/BiE,IACIs9B,WACDngB,EAASphB,UAAW,gBAAa,IACpCiE,IACIs9B,WACDngB,EAASphB,UAAW,eAAY,IACnCiE,IACIs9B,WACDngB,EAASphB,UAAW,iBAAc,IACrCiE,IACIs9B,WACDngB,EAASphB,UAAW,gBAAa,IACpCiE,IACIs9B,WACDngB,EAASphB,UAAW,eAAY,IACnCiE,IACIs9B,WACDngB,EAASphB,UAAW,gBAAa,IACpCiE,IACIs9B,WACDngB,EAASphB,UAAW,kBAAe,IACtCiE,IACIs9B,WACDngB,EAASphB,UAAW,qBAAkB,IACzCiE,IACIs9B,WACDngB,EAASphB,UAAW,gBAAa,IACpCiE,IACIs9B,WACDngB,EAASphB,UAAW,eAAY,IACnCiE,IACIs9B,WACDngB,EAASphB,UAAW,kBAAe,IACtCiE,IACIs9B,WACDngB,EAASphB,UAAW,kBAAe,IACtCiE,IACIs9B,WACDngB,EAASphB,UAAW,qBAAkB,IACzCiE,IACIs9B,WACDngB,EAASphB,UAAW,wBAAqB,IAC5CiE,IACIs9B,WACDngB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,eAAY,IACnCiE,IACIs9B,WACDngB,EAASphB,UAAW,oBAAiB,IACxCiE,IACIs9B,WACDngB,EAASphB,UAAW,gBAAa,IACpCiE,IACIs9B,WACDngB,EAASphB,UAAW,wBAAqB,IAC5CiE,IACIs9B,WACDngB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,wBAAqB,IAC5CiE,IACIs9B,WACDngB,EAASphB,UAAW,mBAAgB,IACvCiE,IACIs9B,WACDngB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,oBAAiB,IACxCiE,IACI2B,YAAS,IACVwb,EAASphB,UAAW,qBAAkB,IACzCiE,IACIs9B,WACDngB,EAASphB,UAAW,mBAAgB,IACvCiE,IACIs9B,WACDngB,EAASphB,UAAW,kBAAe,IACtCiE,IACIs9B,WACDngB,EAASphB,UAAW,qBAAkB,IACzCiE,IACIs9B,WACDngB,EAASphB,UAAW,oBAAiB,IACxCiE,IACIs9B,WACDngB,EAASphB,UAAW,qBAAkB,IACzCiE,IACIs9B,WACDngB,EAASphB,UAAW,oBAAiB,IACxCiE,IACIs9B,WACDngB,EAASphB,UAAW,qBAAkB,IACzCiE,IACIs9B,WACDngB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,mBAAgB,IACvCiE,IACIs9B,WACDngB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,qBAAkB,IACzCiE,IACIs9B,WACDngB,EAASphB,UAAW,kBAAe,IACtCiE,IACIs9B,WACDngB,EAASphB,UAAW,eAAY,IACnCiE,IACIs9B,WACDngB,EAASphB,UAAW,iBAAc,IACrCiE,IACIs9B,WACDngB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,iBAAc,IACrCiE,IACIs9B,WACDngB,EAASphB,UAAW,iBAAc,IACrCiE,IACIs9B,WACDngB,EAASphB,UAAW,qBAAkB,IACzCiE,IACIs9B,WACDngB,EAASphB,UAAW,oBAAiB,IACxCiE,IACIs9B,WACDngB,EAASphB,UAAW,kBAAe,IACtCiE,IACIs9B,WACDngB,EAASphB,UAAW,mBAAgB,IACvCiE,IACIs9B,WACDngB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,sBAAmB,IAC1CiE,IACIs9B,WACDngB,EAASphB,UAAW,uBAAoB,IAC3CiE,IACIs9B,WACDngB,EAASphB,UAAW,iBAAc,IACrCiE,IACIs9B,WACDngB,EAASphB,UAAW,kBAAe,IACtCiE,IACIs9B,WACDngB,EAASphB,UAAW,cAAW,IAClCiE,IACIs9B,WACDngB,EAASphB,UAAW,mBAAgB,IACvCiE,IACIs9B,WACDngB,EAASphB,UAAW,yBAAsB,IAC7CiE,IACIs9B,WACDngB,EAASphB,UAAW,cAAW,IAClCiE,IACI2B,YAAU,IACXwb,EAASphB,UAAW,uBAAoB,IAC3CiE,IACIo9B,aAAY5vB,IACb2P,EAASphB,UAAW,wBAAqB,IAC5CiE,IACI2B,YAAS,IACVwb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"}