{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/loading-indicator.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/renderer/virtual-tree-freeze-render.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, Property } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n/**\n * Defines TreeGrid column\n */\nvar TreeGridColumn = /** @class */ (function (_super) {\n    __extends(TreeGridColumn, _super);\n    function TreeGridColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], TreeGridColumn.prototype, \"columns\", void 0);\n    return TreeGridColumn;\n}(Column));\nexport { TreeGridColumn };\n/**\n * Defines stacked tree grid column\n */\nvar StackedColumn = /** @class */ (function (_super) {\n    __extends(StackedColumn, _super);\n    function StackedColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StackedColumn;\n}(TreeGridColumn));\nexport { StackedColumn };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.grid.currentViewData.filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.grid.currentViewData.indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n                tr.querySelector('.e-frame').setAttribute('title', 'checkbox' + chkstate);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed && !isNullOrUndefined(args.row)) {\n                args.row.style.display = 'none';\n                var rowsObj = this.parent.grid.getRowsObject();\n                if (!this.parent.grid.isFrozenGrid() && !isNullOrUndefined(args.row.getAttribute('data-uid'))) {\n                    rowsObj.filter(function (e) { return e.uid === args.row.getAttribute('data-uid'); })[0].visible = false;\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow && !isNullOrUndefined(args.row)) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (!isNullOrUndefined(args.row)) {\n            if (args.row.querySelector('.e-treegridexpand')) {\n                args.row.setAttribute('aria-expanded', 'true');\n            }\n            else if (args.row.querySelector('.e-treegridcollapse')) {\n                args.row.setAttribute('aria-expanded', 'false');\n            }\n            if (this.parent.enableCollapseAll && this.parent.initialRender) {\n                if (!isNullOrUndefined(data.parentItem)) {\n                    args.row.style.display = 'none';\n                }\n            }\n        }\n        var dragStartData = 'dragStartData';\n        var draggedRecord = 'draggedRecord';\n        if (this.parent.rowDragAndDropModule && this.parent.grid.rowDragAndDropModule && (this.parent.grid.rowDragAndDropModule[\"\" + dragStartData] ||\n            this.parent.rowDragAndDropModule[\"\" + draggedRecord]) && this.parent.getContentTable().scrollHeight <= this.parent.getContent().clientHeight) {\n            var lastRowBorder = 'lastRowBorder';\n            var lastVisualData = this.parent.getVisibleRecords()[this.parent.getVisibleRecords().length - 1];\n            if (lastVisualData.uniqueID === args.data.uniqueID && !isNullOrUndefined(args.row) && !args.row.cells[0].classList.contains('e-lastrowcell')) {\n                this.parent[\"\" + lastRowBorder](args.row, true);\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                if (this.parent['isFromGantt'] && !this.parent.loadChildOnDemand) {\n                    iconRequired = data.hasChildRecords;\n                }\n                else {\n                    iconRequired = !(data.childRecords.length === 0);\n                }\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '4px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            summaryData = isNullOrUndefined(summaryData) ? null : summaryData;\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    this.parent[\"\" + renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        if (rowDetails.action === 'remoteExpand' && this.parent.grid.filterModule && this.parent.grid.filterModule['value']) {\n            var filterqry = this.parent.grid.getDataModule().generateQuery().queries.filter(function (e) { return e.fn !== 'onPage' && typeof e.e.predicates !== 'undefined'; });\n            qry.queries.push(filterqry[0]);\n        }\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            var resultChildData = [];\n            if (rowDetails.action === 'remoteExpand' && _this.parent.grid.filterModule && _this.parent.grid.filterModule['value']) {\n                for (var i = 0; i < datas.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(datas[parseInt(i.toString(), 10)], _this.parent.parentIdMapping) && datas[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] !== null && datas[parseInt(i.toString(), 10)].level === 0) {\n                        datas.splice(i, 1);\n                        i--;\n                    }\n                }\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping]) {\n                        if (Object.prototype.hasOwnProperty.call(result, i)) {\n                            resultChildData.push(result[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                result = resultChildData;\n            }\n            if (_this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n                rowDetails.record.childRecords = [];\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] && Object.prototype.hasOwnProperty.call(result, i)) {\n                        rowDetails.record.childRecords.push(result[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else {\n                rowDetails.record.childRecords = result;\n            }\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            delete parentData.childRecords;\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                            if (rowDetails.action === 'remoteExpand') {\n                                result[parseInt(r.toString(), 10)].childRecords = [];\n                                result[parseInt(r.toString(), 10)].childRecords = rowDetails.record.childRecords;\n                            }\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex_1 = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex_1.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.grid.vueInstance = this.vueInstance;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n        var enableHtmlSanitizer = 'enableHtmlSanitizer';\n        this.grid[\"\" + enableHtmlSanitizer] = this.enableHtmlSanitizer;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && (!isNullOrUndefined(args.data) && args.data['hasChildRecords']) && !this.selectionSettings.checkboxOnly) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var actualTarget = 'actualTarget';\n            var target = _this.grid.selectionModule[\"\" + actualTarget];\n            if (!isNullOrUndefined(target) && (target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (this.rowTemplate) {\n            if (this.isReact && this.getContentTable().rows.length === 0) {\n                setTimeout(function () {\n                    _this.treeColumnRowTemplate();\n                    if (_this.enableCollapseAll) {\n                        var currentData = _this.getCurrentViewRecords();\n                        var rows = _this.getContentTable().rows;\n                        for (var i = 0; i < rows.length; i++) {\n                            var args = { data: currentData[parseInt(i.toString(), 10)],\n                                row: rows[parseInt(i.toString(), 10)] };\n                            _this.renderModule.RowModifier(args);\n                        }\n                    }\n                }, 0);\n            }\n            else {\n                this.treeColumnRowTemplate();\n            }\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.allowResizing) {\n            this.updateColumnsWidth(this.columns);\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnsWidth = function (columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.updateColumnsWidth(column.columns);\n            }\n            else if (column.field) {\n                var currentColumn = _this.grid.getColumnByField(column.field);\n                column.width = currentColumn.width;\n            }\n        });\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        var isSummaryRow = 'isSummaryRow';\n        return this.grid.currentViewData.filter(function (e) { return isNullOrUndefined(e[\"\" + isSummaryRow]); });\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[\"\" + children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                if (this.enableVirtualization && this.isCollapseAll) {\n                    if (this.isExpandAll && row.rowIndex === -1) {\n                        record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                    }\n                    else {\n                        record = this.grid.getCurrentViewRecords()[row.rowIndex];\n                    }\n                }\n                else {\n                    record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                }\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        if (!isNullOrUndefined(this.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex])) {\n                            this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        if (!this.enableVirtualization) {\n                            this.expandRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                        else if (rows[0].getAttribute('aria-expanded') !== 'true') {\n                            this.expandRow(rows[0]);\n                        }\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.grid.currentViewData.indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.grid.currentViewData;\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization ||\n                this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        var rows = this.getContentTable().rows;\n        rows = [].slice.call(rows);\n        for (var i = 0; i < rows.length; i++) {\n            var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                .cells[this.treeColumnIndex];\n            var row = rows[parseInt(i.toString(), 10)];\n            var rowData = this.grid.getRowsObject()[parseInt(i.toString(), 10)].data;\n            var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n            this.renderModule.cellRender(arg);\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, false);\n                }\n            }\n        }\n    };\n    /**\n     * Method to sanitize html element\n     *\n     * @param {any} value - Specifies the html value to sanitize\n     * @returns {any} Returns the sanitized html value\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeGrid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer && typeof (value) === 'string') {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.column.index)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].edit === 'add') {\n                merge(this.currentViewRecords[parseInt(rowObjectIndex.toString(), 10)], this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n        if (e.target.classList.contains('e-frame') && this.parent.getCurrentViewRecords().length === 0) {\n            this.doubleClickTarget = null;\n        }\n        if (e.target.classList.contains('e-treegridcollapse') || e.target.classList.contains('e-treegridexpand')) {\n            var tr = parentsUntil(e.target, 'e-row');\n            var rowIndex = tr && parseInt(tr.getAttribute('data-rowindex'), 10);\n            if (!isNullOrUndefined(rowIndex) && rowIndex >= 0 && this.parent.allowPaging) {\n                /* eslint-disable-next-line */\n                this.parent.grid.getDataRows()[rowIndex].dataset.uid = this.parent.grid.contentModule.getRows()[rowIndex].uid;\n            }\n        }\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionBegin, args);\n        }\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    if (this.parent['isGantt'] && !this.parent.loadChildOnDemand) {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                    else {\n                        var crud = null;\n                        crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                        crud.then(function (e) {\n                            if (!isNullOrUndefined(e)) {\n                                args.rowData[args.columnName] = e[args.columnName];\n                            }\n                            _this.updateCell(args, rowIndex_1);\n                            _this.afterCellSave(args, row_1, rowIndex_1);\n                        });\n                    }\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else if (!this.parent.enableVirtualization) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][\"\" + position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][\"\" + position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[\"\" + frows].splice(0, 1);\n                        this.parent.grid.contentModule[\"\" + frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        if ((this.endIndex - this.startIndex !== this.parent.pageSettings.pageSize) && (this.totalRecords > this.parent.pageSettings.pageSize) &&\n            (this.endIndex === this.totalRecords)) {\n            args.startIndex = this.endIndex - this.parent.pageSettings.pageSize;\n            args.endIndex = this.endIndex;\n        }\n        else {\n            args.startIndex = this.startIndex;\n            args.endIndex = this.endIndex;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? parseInt(this.parent.height.toString(), 10) :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock || isNullOrUndefined(this[\"\" + selectedRowIndex]) ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if ((nextSetResIndex + this.parent.pageSettings.pageSize) > this.totalRecords && (this.endIndex - this.startIndex) <\n                (this.parent.pageSettings.pageSize / 2) && (this.endIndex - nextSetResIndex) < (this.parent.pageSettings.pageSize / 2)) {\n                this.startIndex = lastIndex - (this.parent.pageSettings.pageSize / 2);\n            }\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    if (this.totalRecords === this.endIndex) {\n                        this.translateY = (this.totalRecords * rowHeight) - ((this.endIndex - this.startIndex) * rowHeight);\n                    }\n                    else {\n                        this.translateY = scrollArgs.offset.top;\n                    }\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && ((isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) ||\n                (this.parent.enableVirtualMaskRow && this.requestType === 'virtualscroll'))) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var containerRect = 'containerRect';\n            _this[\"\" + containerRect] = _this[\"\" + options].container.getBoundingClientRect();\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer, getTransformValues } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            if (requestType === 'save' || (requestType === 'refresh' && this.parent['isGantt'] && this.parent['isAddedFromGantt'])) {\n                startIndex = counts.startIndex + (counts.count - counts.endIndex);\n                endIndex = counts.count;\n                this.parent['isAddedFromGantt'] = false;\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            var virtualWrapperElement = this.parent.grid.contentModule.virtualEle.wrapper;\n            var translateY = getTransformValues(virtualWrapperElement).height;\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length) && translateY === 0) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parseInt(parentGrid.height.toString(), 10) :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            if (freeze && frozenRightRows.length) {\n                frozenRightRows[parseInt(i.toString(), 10)].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Column","options","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","TreeGridColumn","_super","apply","Property","StackedColumn","LoadingIndicator","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","rowDeselecting","movableContent","frozenContent","content","dataRowIndex","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","currentViewData","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","chkstate","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","rowsObj","getRowsObject","isFrozenGrid","visible","proxy_1","parentrec","rowDragAndDropModule","getContentTable","scrollHeight","getContent","clientHeight","getVisibleRecords","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","loadChildOnDemand","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","templateFn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","actionArgs","searchString","expands","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","filterqry","predicates","showSpinner","remoteExpandedData","remoteCollapsedData","inx","haveChild","resultChildData","events.actionComplete","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","getColumnByIndex","editType","findnextRowElement","selectRow","cellIndex_1","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","isVue","vueInstance","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","enableHtmlSanitizer","triggerEvents","IsExpandCollapseClicked","checkboxOnly","bindGridEvents","rowSelecting","events.rowDeselecting","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","dataManager","isQueryInvokedFromData","callBackPromise_2","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","literals.movableContent","literals.frozenContent","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","currentObject","val","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","sHeight","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","updateColumnsWidth","currentColumn","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","lastrowIdx","lastRow","removeAttribute","events.localPagedExpandCollapse","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","gridRowsObject","currentIndex","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","sanitize","SanitizeHtmlHelper","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","url","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","dataset","addArgs","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","literals.dataRowIndex","rowCollection","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","initialRowTop","gridTop","containerRect","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","isRowSelected","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","virtualWrapperElement","wrapper","getTransformValues","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","literals.content","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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"}